plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

group = 'com.excella.foodinc.write'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	jcenter()
}

sourceSets {
	integrationTest {
		java {
			srcDir file('src/integration-test/java')
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
		}
		resources.srcDir file('src/integration-test/resources')
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestImplementation.extendsFrom testImplementation
}

task integrationTest(type: Test){
	description='Runs the integration tests.'
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen{false}
	mustRunAfter test
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile 'io.springfox:springfox-swagger-ui:2.9.2'
	compile("org.springframework.data:spring-data-jdbc")
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.modelmapper:modelmapper:2.3.0')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.hamcrest:hamcrest-library:1.3'
	testImplementation 'com.jayway.jsonpath:json-path:2.2.0'
	testCompile("org.flywaydb.flyway-test-extensions:flyway-spring-test:5.0.0")
	testRuntime('org.flywaydb:flyway-core:5.2.1')
}